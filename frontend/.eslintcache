[{"D:\\Temps\\ReactFlask\\frontend\\src\\index.js":"1","D:\\Temps\\ReactFlask\\frontend\\src\\reportWebVitals.js":"2","D:\\Temps\\ReactFlask\\frontend\\src\\App.js":"3"},{"size":517,"mtime":1632687968431,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1632687968433,"results":"6","hashOfConfig":"5"},{"size":1965,"mtime":1632774752920,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"awa7a3",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"10"},"D:\\Temps\\ReactFlask\\frontend\\src\\index.js",[],["17","18"],"D:\\Temps\\ReactFlask\\frontend\\src\\reportWebVitals.js",[],["19","20"],"D:\\Temps\\ReactFlask\\frontend\\src\\App.js",["21"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nfunction App() {\r\n  const [myMessage, setMyMessage] = useState({})\r\n  const [myMessageIds, setMyMessageIds] = useState('')\r\n  const [myMessageName, setMyMessageName] = useState('')\r\n\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://reactflask-smb.herokuapp.com/flask/hello').then(response => {\r\n      console.log(\"SUCCESS\", response);\r\n      console.log(response);\r\n      setMyMessage(response.data.message);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  }, []);\r\n\r\n\r\n  useEffect(()=>{\r\n    const id = 100;\r\n    axios.get(`https://reactflask-smb.herokuapp.com/flask/${id}`).then(response => {\r\n      console.log(\"1.USE ID-SUCCESS: \", response);\r\n      console.log(response);\r\n      setMyMessageIds(response.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  }, []);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    console.log('The link was clicked.');\r\n    const name = 'Samuel';\r\n    axios.get(`https://reactflask-smb.herokuapp.com/flask/${name}`).then(response => {\r\n      console.log(\"2.SUCCESS: \", response);\r\n      console.log(response);\r\n      setMyMessageName(response.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>React + Flask Tutorial</p>\r\n        <div>{myMessage.status === 200 ? \r\n          <h3> Henting av meldinger fra Flask Fungerer som det skal: {myMessage.data.message} Ids {myMessageIds} Name {myMessageName} </h3>\r\n          :\r\n          <h3>..LOADING..</h3>}</div>\r\n      </header>\r\n      <h3>\r\n      <p> xsxsx Testing - Pyton Flask Test: \r\n      <a href=\"#\" onClick={handleClick}>\r\n        Click me\r\n      </a>\r\n     </p>\r\n      </h3>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"22","replacedBy":"26"},{"ruleId":"24","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":60,"column":7,"nodeType":"30","endLine":60,"endColumn":41},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],["31"],["32"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]