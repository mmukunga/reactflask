{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","myMessage","setMyMessage","setState","myMessageIds","setMyMessageIds","myMessageName","setMyMessageName","fileData","setFileData","useEffect","axios","get","then","response","console","log","data","message","catch","error","Fremgangsm책te","Ingredienser","className","src","logo","alt","status","href","onClick","e","preventDefault","onChange","target","name","value","handleChange","key","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,MAA0B,iC,wBCsG1BA,MAjGf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAEaF,mBAAS,IAFtB,mBAECG,GAFD,aAG2BH,mBAAS,IAHpC,mBAGNI,EAHM,KAGQC,EAHR,OAI6BL,mBAAS,IAJtC,mBAINM,EAJM,KAISC,EAJT,OAKmBP,mBAAS,IAL5B,mBAKNQ,EALM,KAKIC,EALJ,KAmEb,OArDAC,qBAAU,WACRC,IAAMC,IAAI,oDAAoDC,MAAK,SAAAC,GACjEC,QAAQC,IAAI,UAAWF,GACvBC,QAAQC,IAAIF,GACZZ,EAAaY,EAASG,KAAKC,YAC1BC,OAAM,SAAAC,GACPL,QAAQC,IAAII,QAEb,IAGHV,qBAAU,WAERC,IAAMC,IAAN,qDADW,MACmDC,MAAK,SAAAC,GACjEC,QAAQC,IAAI,qBAAsBF,GAClCC,QAAQC,IAAIF,GACZT,EAAgBS,EAASG,SACxBE,OAAM,SAAAC,GACPL,QAAQC,IAAII,QAEb,IA8BHL,QAAQC,IAAIR,EAASa,oBACrBN,QAAQC,IAAIR,EAASc,cAGnB,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,uDACA,8BAA2B,MAArBzB,EAAU0B,OACd,yFAA4D1B,EAAUgB,KAAKC,QAA3E,QAAyFd,EAAzF,SAA6GE,EAA7G,OAEA,kDAEJ,6BACA,mEACA,mBAAGsB,KAAK,IAAIC,QA5BI,SAACC,GACnBA,EAAEC,iBACFhB,QAAQC,IAAI,yBAEZL,IAAMC,IAAN,mEADiB,eACiEC,MAAK,SAAAC,GACrFC,QAAQC,IAAI,cAAeF,GAC3BC,QAAQC,IAAIF,GACZP,EAAiBO,EAASG,SACzBE,OAAM,SAAAC,GACPL,QAAQC,IAAII,OAmBZ,2BAKA,4BACA,wBAAQY,SAAU,SAAAF,GAAC,OAhDF,SAACA,GAAO,IAAD,EACJA,EAAEG,OAAjBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACbhC,EAAS,CAAC,KAAQ+B,EAAM,MAASC,IACjCpB,QAAQC,IAAR,gCAA6CmB,GAC7CpB,QAAQC,IAAI,sCACZL,IAAMC,IAAN,mEAAsEuB,IAAStB,MAAK,SAAAC,GAClFC,QAAQC,IAAI,2BAA4BF,GACxCC,QAAQC,IAAIF,GACZL,EAAYK,EAASG,SACpBE,OAAM,SAAAC,GACPL,QAAQC,IAAII,MAsCWgB,CAAaN,IAAIP,UAAU,aAAlD,SA9EY,CACd,CAAEc,IAAK,wBAAsBF,MAAO,yBACpC,CAAEE,IAAK,iDAAkDF,MAAO,kDAChE,CAAEE,IAAK,aAAcF,MAAO,cAC5B,CAAEE,IAAK,2FAA4FF,MAAO,6FA2E7FG,KAAI,SAACD,EAAKF,GAAN,OAAgB,wBAAQA,MAAOE,EAAf,SAAqBF,WAlBtD,SAsBE,8BACG3B,GAAYA,QCpFN+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71e35a65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\nfunction App() {\r\n  const [myMessage, setMyMessage] = useState({})\r\n  const [state, setState] = useState({})\r\n  const [myMessageIds, setMyMessageIds] = useState('')\r\n  const [myMessageName, setMyMessageName] = useState('')\r\n  const [fileData, setFileData] = useState([])\r\n\r\n  const options = [\r\n    { key: 'Bl책skjellsalat.txt', value: 'Bl책skjellsalat.txt' },\r\n    { key: 'Andebryst med pastinakkrem og appelsinsaus.txt', value: 'Andebryst med pastinakkrem og appelsinsaus.txt' },\r\n    { key: 'Gulasj.txt', value: 'Gulasj.txt' },\r\n    { key: 'Burrito med stekt kyllingfilet, ris, avokadodressing, paprika-, chili- og mangosalsa.txt', value: 'Burrito med stekt kyllingfilet, ris, avokadodressing, paprika-, chili- og mangosalsa.txt' },\r\n  ];\r\n\r\n  useEffect(()=>{\r\n    axios.get('https://reactflask-smb.herokuapp.com/flask/hello').then(response => {\r\n      console.log(\"SUCCESS\", response);\r\n      console.log(response);\r\n      setMyMessage(response.data.message);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  }, []);\r\n\r\n\r\n  useEffect(()=>{\r\n    const id = 100;\r\n    axios.get(`https://reactflask-smb.herokuapp.com/flask/${id}`).then(response => {\r\n      console.log(\"1.USE ID-SUCCESS: \", response);\r\n      console.log(response);\r\n      setMyMessageIds(response.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  }, []);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target\r\n    setState({'name': name, 'value': value}); \r\n    console.log(`handleChange Option selected:`, value);\r\n    console.log('handleChange The link was clicked.');\r\n    axios.get(`https://reactflask-smb.herokuapp.com/flask/oppskriftInfo/${value}`).then(response => {\r\n      console.log(\"2.handleChange SUCCESS: \", response);\r\n      console.log(response);\r\n      setFileData(response.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    console.log('The link was clicked.');\r\n    const filename = 'Gulasj.txt';\r\n    axios.get(`https://reactflask-smb.herokuapp.com/flask/oppskriftInfo/${filename}`).then(response => {\r\n      console.log(\"2.SUCCESS: \", response);\r\n      console.log(response);\r\n      setMyMessageName(response.data);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  };\r\n\r\n  console.log(fileData.Fremgangsm책te)\r\n  console.log(fileData.Ingredienser)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>React + Flask Tutorial</p>\r\n        <div>{myMessage.status === 200 ? \r\n          <h3> Henting av meldinger fra Flask Fungerer som det skal: {myMessage.data.message} Ids {myMessageIds} Name {myMessageName} </h3>\r\n          :\r\n          <h3>..LOADING..</h3>}</div>\r\n      </header>\r\n      <h3>\r\n      <p> xsxsx Testing - Pyton Flask Test: \r\n      <a href=\"#\" onClick={handleClick}>\r\n        Click me\r\n      </a>\r\n     </p>\r\n      </h3>\r\n      <p>\r\n      <select onChange={e => handleChange(e)} className=\"SelectFile\" >\r\n        {options.map((key, value) => <option value={key}>{value}</option>)}\r\n      </select >\r\n      </p>\r\n      Filer:\r\n      <pre>\r\n        {fileData && fileData}\r\n      </pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}